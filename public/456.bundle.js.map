{"version":3,"sources":["webpack://proyecto_final01/./src/components/about/i18n.js","webpack://proyecto_final01/./src/components/about/FormInput.js","webpack://proyecto_final01/./src/components/about/SelectInput.js","webpack://proyecto_final01/./src/constant/langOptions.js","webpack://proyecto_final01/./src/components/about/Formfields.js","webpack://proyecto_final01/./src/components/about/index.js"],"names":["FormInput","city","setCity","lang","className","i18n","city_place","type","value","onChange","e","target","propTypes","PropTypes","SelectInput","handleChange","options","choose_language","map","option","key","label","isRequired","useContext","MyConfigContext","setLang","city1","setCity1","city2","setCity2","city3","setCity3","role","select_language","console","log","favorite_places","MyErrorBoundary"],"mappings":"iNAmBA,EAnBa,CAET,GAAM,CACF,gBAAmB,uBACnB,gBAAmB,uBACnB,gBAAmB,kBACnB,WAAc,gBAIlB,GAAM,CACF,gBAAmB,yBACnB,gBAAmB,wBACnB,gBAAmB,oBACnB,WAAc,mBCVhBA,EAAY,SAAC,GAA0B,IAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,KAO/B,OAEQ,uBAAKC,UAAU,cACX,6BACCC,EAAKF,GAAMG,YAEZ,yBAAOC,KAAK,OAAOH,UAAU,eAAeI,MAAOP,EAAMQ,SAV7C,SAACC,GACrBR,EAAQQ,EAAEC,OAAOH,YAgBzBR,EAAUY,UAAY,CAClBV,QAASW,oBACTZ,KAAMY,uBAKV,QC3BMC,EAAc,SAAC,GAAkC,IAAjCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,QAASb,EAAU,EAAVA,KAE3C,OAEE,uBAAKC,UAAU,cAEX,6BACCC,EAAKF,GAAMc,iBAGZ,0BAAQb,UAAU,eAAeI,MAAQL,EAAOM,SAAUM,GACjDC,EAAQE,KAAI,SAACC,GAAD,OACb,0BAAQC,IAAKD,EAAOX,MAAQA,MAAOW,EAAOX,OAAQW,EAAOE,aAUzEP,EAAYF,UAAY,CACpBG,aAAcF,oBACdG,QAASH,YACPA,UAAgB,CACdQ,MAAOR,sBACPL,MAAOK,yBAETS,YAMN,QC5BA,EAXgB,CACZ,CACED,MAAO,UACPb,MAAO,MAET,CACEa,MAAO,UACPb,MAAO,OCkCb,EAhCmB,WAEf,OAA6Ee,gBAAWC,KAAhFrB,EAAR,EAAQA,KAAMsB,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,SAAUC,EAAxC,EAAwCA,MAAOC,EAA/C,EAA+CA,SAAUC,EAAzD,EAAyDA,MAAOC,EAAhE,EAAgEA,SAOpE,OACI,gCACI,wBAAMC,KAAK,QACX,0BAAK3B,EAAKF,GAAM8B,gBAAhB,KACA,2BACA,gBAAC,EAAD,CAAalB,aAVK,SAACL,GACnBe,EAAQf,EAAEC,OAAOH,OACjB0B,QAAQC,IAAIhC,IAQ6Ba,QAASA,EAASb,KAAMA,IAEjE,0BAAKE,EAAKF,GAAMiC,gBAAhB,KAEA,2BAEA,gBAAC,EAAD,CAAWnC,KAAMyB,EAAOxB,QAAWyB,EAAUxB,KAAMA,IACnD,gBAAC,EAAD,CAAWF,KAAM2B,EAAO1B,QAAW2B,EAAU1B,KAAMA,IACnD,gBAAC,EAAD,CAAWF,KAAM6B,EAAO5B,QAAW6B,EAAU5B,KAAMA,O,UCT3D,EAlBc,WAEV,OACI,gCACI,2BAAM,2BACN,uBAAKC,UAAU,8BACX,uBAAKA,UAAU,YACX,uBAAKA,UAAU,iBACX,gBAACiC,EAAA,EAAD,KACI,gBAAC,EAAD","file":"456.bundle.js","sourcesContent":["const i18n = {\r\n\r\n    'en': {\r\n        'select_language': 'Select your language',\r\n        'favorite_places': 'Your favorite places',\r\n        'choose_language': 'Choose Language',\r\n        'city_place': 'City / Place'\r\n        \r\n      },\r\n\r\n    'es': {\r\n        'select_language': 'Seleccione su lenguaje',\r\n        'favorite_places': 'Tus lugares favoritos',\r\n        'choose_language': 'Elija el lenguaje',\r\n        'city_place': 'Ciudad / Lugar'\r\n      }     \r\n\r\n};\r\n\r\nexport default i18n;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport i18n from \"./i18n\";\r\n\r\nconst FormInput = ({city, setCity, lang}) => {\r\n\r\n\r\n    const onChangeHandler = (e) =>{\r\n        setCity(e.target.value);\r\n    }\r\n\r\n    return (\r\n\r\n            <div className=\"form-group\">                                \r\n                <label>\r\n                {i18n[lang].city_place}\r\n                </label>\r\n                <input type=\"text\" className=\"form-control\" value={city} onChange={ onChangeHandler } />\r\n            </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nFormInput.propTypes = {\r\n    setCity: PropTypes.func.isRequired,\r\n    city: PropTypes.string.isRequired\r\n  }\r\n  \r\n\r\n\r\nexport default FormInput;","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport i18n from \"./i18n\";\r\n\r\nconst SelectInput = ({handleChange, options, lang}) => {\r\n\r\n  return (\r\n\r\n    <div className=\"form-group\">                        \r\n                            \r\n        <label>\r\n        {i18n[lang].choose_language}\r\n        </label>\r\n\r\n        <select className=\"form-control\" value={ lang } onChange={handleChange}>\r\n                {options.map((option) => (\r\n                <option key={option.value}  value={option.value}>{option.label}</option>\r\n                ))}\r\n        </select>\r\n\r\n    </div> \r\n\r\n);\r\n\r\n};\r\n\r\nSelectInput.propTypes = {\r\n    handleChange: PropTypes.func.isRequired,\r\n    options: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        value: PropTypes.string.isRequired,\r\n      })\r\n    ).isRequired\r\n}\r\n  \r\n\r\n\r\n\r\nexport default SelectInput;","const options = [\r\n    {\r\n      label: \"English\",\r\n      value: \"en\",\r\n    },\r\n    {\r\n      label: \"EspaÃ±ol\",\r\n      value: \"es\",\r\n    }\r\n  ];\r\n\r\nexport default options;","import React, {useContext}  from \"react\";\r\nimport {MyConfigContext} from \"../../contexts/MainContext\";\r\nimport FormInput from \"./FormInput\";\r\nimport SelectInput from \"./SelectInput\";\r\nimport options from \"../../constant/langOptions\";\r\nimport i18n from \"./i18n\";\r\n\r\n\r\n\r\nconst FormFields = () =>{\r\n\r\n    const { lang, setLang, city1, setCity1, city2, setCity2, city3, setCity3 } = useContext(MyConfigContext);\r\n\r\n    const handleChange  = (e)=>{\r\n        setLang(e.target.value);\r\n        console.log(lang);\r\n    }   \r\n\r\nreturn (\r\n    <>\r\n        <form role=\"form\">\r\n        <h4>{i18n[lang].select_language}:</h4>\r\n        <br/>                    \r\n        <SelectInput handleChange={handleChange} options={options} lang={lang} />\r\n\r\n        <h4>{i18n[lang].favorite_places}:</h4>\r\n\r\n        <br/>\r\n\r\n        <FormInput city={city1} setCity = {setCity1} lang={lang} />\r\n        <FormInput city={city2} setCity = {setCity2} lang={lang} />\r\n        <FormInput city={city3} setCity = {setCity3} lang={lang} />\r\n\r\n        </form>    \r\n    </>\r\n);\r\n\r\n\r\n\r\n};\r\n\r\nexport default FormFields;","import React from \"react\";\r\nimport FormFields from \"./Formfields\";\r\nimport MyErrorBoundary from \"../common/MyErrorBoundary\";\r\n\r\nconst About = () =>{\r\n\r\n    return(\r\n        <>\r\n            <br /><br />\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-5\">\r\n                    <div className=\"card bg-light\">\r\n                        <MyErrorBoundary>\r\n                            <FormFields />\r\n                        </MyErrorBoundary>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;"],"sourceRoot":""}